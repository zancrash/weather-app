{"version":3,"sources":["logo.svg","components/Titles.js","components/Form.js","components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Titles","className","React","Component","Form","onSubmit","this","props","getWeather","type","name","placeholder","Weather","class","city","country","temperature","humidity","description","error","id","API_KEY","App","state","undefined","e","a","preventDefault","target","elements","value","fetch","api_call","json","data","cod","setState","main","temp","sys","weather","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAAe,I,MCaAA,E,4JAVX,WACI,OACI,sBAAKC,UAAU,eAAf,UACI,yCACA,8G,GALKC,IAAMC,WCcZC,E,4JAbX,WACI,OACI,uBAAMC,SAAUC,KAAKC,MAAMC,WAA3B,UACI,sBAAKP,UAAU,oBAAf,UACI,uBAAOQ,KAAK,OAAOC,KAAK,OAAOC,YAAY,SAC3C,uBAAOF,KAAK,OAAOC,KAAK,UAAUC,YAAY,eAElD,wD,GARGT,IAAMC,WCWVS,EAVC,SAACL,GAAD,OACZ,sBAAKM,MAAM,eAAX,UACKN,EAAMO,MAAQP,EAAMQ,SAAW,8BAAG,4CAAH,IAA0BR,EAAMO,KAAhC,KAAwCP,EAAMQ,WAC7ER,EAAMS,aAAe,8BAAG,gDAAH,IAA8BT,EAAMS,eACzDT,EAAMU,UAAY,8BAAG,6CAAH,IAA2BV,EAAMU,YACnDV,EAAMW,aAAc,8BAAG,+CAAH,IAA6BX,EAAMW,eACvDX,EAAMY,OAAS,mBAAGC,GAAG,YAAN,SAAmBb,EAAMY,YCI3CE,EAAU,mCA+DDC,E,4MA3DbC,MAAQ,CACNP,iBAAaQ,EACbV,UAAMU,EACNT,aAASS,EACTP,cAAUO,EACVN,iBAAaM,EACbL,WAAOK,G,EAEThB,W,uCAAa,WAAOiB,GAAP,qBAAAC,EAAA,6DAEXD,EAAEE,iBAEIb,EAAOW,EAAEG,OAAOC,SAASf,KAAKgB,MAC9Bf,EAAUU,EAAEG,OAAOC,SAASd,QAAQe,MAL/B,SAOYC,MAAM,qDAAD,OAAsDjB,EAAtD,YAA8DC,EAA9D,kBAA+EM,EAA/E,kBAPjB,cAOLW,EAPK,gBASQA,EAASC,OATjB,OASLC,EATK,OAUPpB,GAAQC,GAAwB,QAAbmB,EAAKC,IAE1B,EAAKC,SAAS,CACZpB,YAAakB,EAAKG,KAAKC,KACvBxB,KAAMoB,EAAKxB,KACXK,QAASmB,EAAKK,IAAIxB,QAClBE,SAAUiB,EAAKG,KAAKpB,SACpBC,YAAagB,EAAKM,QAAQ,GAAGtB,YAC7BC,MAAO,KAEAL,GAAQC,GAAwB,QAAbmB,EAAKC,IACjC,EAAKC,SAAS,CACZjB,MAAO,4BAGT,EAAKiB,SAAS,CACZjB,MAAO,wCA1BA,4C,kGA8Bb,WACE,OACE,sBAAKlB,UAAU,gBAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,CAAMO,WAAYF,KAAKE,aACvB,cAAC,EAAD,CACEQ,YAAaV,KAAKiB,MAAMP,YACxBF,KAAMR,KAAKiB,MAAMT,KACjBC,QAAST,KAAKiB,MAAMR,QACpBE,SAAUX,KAAKiB,MAAMN,SACrBC,YAAaZ,KAAKiB,MAAML,YACxBC,MAAOb,KAAKiB,MAAMJ,kB,GAnDZjB,IAAMC,WCJTsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fb01e9f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nclass Titles extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"title-banner\">\r\n                <h1>Tempest</h1>\r\n                <p>Welcome to Tempest! Find your area's temperature, conditions and more.</p>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Titles;","import React from 'react';\r\n\r\nclass Form extends React.Component {\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.props.getWeather}>\r\n                <div className=\"form-input-holder\">\r\n                    <input type=\"text\" name=\"city\" placeholder=\"City\" />\r\n                    <input type=\"text\" name=\"country\" placeholder=\"Country\" />\r\n                </div>\r\n                <button>Get Weather</button>\r\n            </form>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\n\r\n// this is a stateless functional component:\r\nconst Weather = (props) => (\r\n    <div class=\"weather-info\">\r\n        {props.city && props.country && <p><span>Locaton:</span> {props.city}, {props.country}</p>}\r\n        {props.temperature && <p><span>Temperature:</span> {props.temperature}</p>}\r\n        {props.humidity && <p><span>Humidity:</span> {props.humidity}</p>}\r\n        {props.description &&<p><span>Conditions:</span> {props.description}</p>}\r\n        {props.error && <p id=\"error-msg\">{props.error}</p>}\r\n    </div>\r\n);\r\n\r\nexport default Weather;","import logo from './logo.svg';\n//import './App.css';\n\n\n\nimport React from 'react';\n\nimport Titles from './components/Titles';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\n\n\n//api key from OpenWeatherMap.org\nconst API_KEY = '936d24cbc94b5e8c8712f5d3ea39d933';\n\n// wrapper component:\nclass App extends React.Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined\n  }\n  getWeather = async (e) => {\n    //prevent full page refresh:\n    e.preventDefault();\n    //get input values from Form component:\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    //make API call:\n    const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n    //convert info from API call to JSON:\n    const data = await api_call.json();\n    if (city && country && data.cod !== '404') {\n      //console.log(data);\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\"\n      });  \n    } else if (city && country && data.cod === '404'){\n      this.setState({\n        error: \"Invalid city or country\"\n      });  \n    } else {\n      this.setState({\n        error: \"Please enter city and country name.\"\n      });\n    }\n  }\n  render() {\n    return (\n      <div className=\"app-container\">\n        <Titles />\n        <div className=\"app-form-holder\">\n          <Form getWeather={this.getWeather}/>\n          <Weather \n            temperature={this.state.temperature} \n            city={this.state.city}\n            country={this.state.country}\n            humidity={this.state.humidity}\n            description={this.state.description}\n            error={this.state.error}\n          />\n        </div>\n      </div>\n    );\n  }\n};\n\n//export the App component:\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}